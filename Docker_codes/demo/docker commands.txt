# docker run -dit debian
d detach
i interactive
t associates a t terminal
# docker ps
status
# docker stop 433c
# docker stop cranky_chatterjee
stop the container

##### next how NOT to run a debian container #####
# docker run debian

# docker run -d -i -t debian

what docker downloaded into the computer
# docker images

inspect docker images
# docker inspect 9c7a54a9a43c

[
    {
        "Id": "sha256:9c7a54a9a43cca047013b82af109fe963fde787f63f9e016fdc3384500c2823d",
        "RepoTags": [
            "hello-world:latest"
        ],
        "RepoDigests": [
            "hello-world@sha256:fc6cf906cbfa013e80938cdf0bb199fbdbb86d6e3e013783e5a766f50f5dbce0"
        ],
        "Parent": "",
        "Comment": "",
        "Created": "2023-05-04T17:37:03.872958712Z",
        "Container": "347ca68872ee924c4f9394b195dcadaf591d387a45d624225251efc6cb7a348e",
        "ContainerConfig": {
            "Hostname": "347ca68872ee",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/sh",
                "-c",
                "#(nop) ",
                "CMD [\"/hello\"]"
            ],
            "Image": "sha256:62a15619037f3c4fb4e6ba9bd224cba3540e393a55dc52f6bebe212ca7b5e1a7",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "DockerVersion": "20.10.23",
        "Author": "",
        "Config": {
            "Hostname": "",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/hello"
            ],
            "Image": "sha256:62a15619037f3c4fb4e6ba9bd224cba3540e393a55dc52f6bebe212ca7b5e1a7",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": null
        },
        "Architecture": "amd64",
        "Os": "linux",
        "Size": 13256,
        "VirtualSize": 13256,
        "GraphDriver": {
            "Data": {
                "MergedDir": "/var/lib/docker/overlay2/c4d2c5f7a705e686d55211502da362dc0d7f5eb0893ee8c6f330147e90f1b7d4/merged",
                "UpperDir": "/var/lib/docker/overlay2/c4d2c5f7a705e686d55211502da362dc0d7f5eb0893ee8c6f330147e90f1b7d4/diff",
                "WorkDir": "/var/lib/docker/overlay2/c4d2c5f7a705e686d55211502da362dc0d7f5eb0893ee8c6f330147e90f1b7d4/work"
            },
            "Name": "overlay2"
        },
        "RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:01bb4fce3eb1b56b05adf99504dafd31907a5aadac736e36b27595c8b92f07f1"
            ]
        },
        "Metadata": {
            "LastTagTime": "0001-01-01T00:00:00Z"
        }
    }
] 

help

# docker prune --help

Managing container Images

layers presented in an image

# docker pull nginxiner based on the image

# docker history nginx
 


downloading an image without creating a container based on the image

# docker history nginx

# docker images --no-trunc

tag an image

docker tag nginx:latest nginx:my_blog_stable
# created an alias

build an image
# docker build -t my_nginx . # important punctl la sfarsit, -t specify a tag

run it as a container

# docker run -dit my_nginx

view history of the image
# docker history my_nginx

remove an image
# docker rmi nginx:my_blog_stable

remove dangling images
# docker image prune

great care when using following:
 # docker system prune -a

# docker system df
disk space docker is using

# exercises_1

in order to download, or “pull”, the “jenkins” container image, use the following command:
docker pull jenkins/jenkins:lts

Download the "2-alpine" version of this image instead of the default “latest” image:
docker pull httpd:2-alpine

This image is actually called “httpd.” You can determine the
name of the image by searching for on the command line with "docker search TERM" or by
searching on https://hub.docker.com.

# docker search TERM | grep apache

visit this page on Docker Hub to get a working tag:
https://hub.docker.com/_/httpd?tab=tags

Check the images are present
Let’s list the two images that we downloaded:

# docker images

Check to see how much disk space all of images combined are using.
# docker system df

Now delete each of the two images.
To delete Jenkins use this command:

# docker rmi jenkins/jenkins

For Apache we have to declare the tag explicitly or the “rmi” command won’t work.
# docker rmi httpd:2-alpine

# docker images

# END exercises_1






